// <auto-generated />
using System;
using Case.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Case.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Case.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CpfCnpj = "458787878",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 2,
                            CpfCnpj = "125879875",
                            UsuarioId = 4
                        });
                });

            modelBuilder.Entity("Case.Dominio.Entidades.Investimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Investimentos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            DataCompra = new DateTime(2024, 5, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3725),
                            Preco = 1618.80m,
                            ProdutoId = 1,
                            Quantidade = 10
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 1,
                            DataCompra = new DateTime(2024, 6, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3726),
                            Preco = 521.00m,
                            ProdutoId = 2,
                            Quantidade = 50
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 1,
                            DataCompra = new DateTime(2024, 7, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3728),
                            Preco = 460.00m,
                            ProdutoId = 3,
                            Quantidade = 200
                        },
                        new
                        {
                            Id = 4,
                            ClienteId = 1,
                            DataCompra = new DateTime(2024, 7, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3729),
                            Preco = 516.00m,
                            ProdutoId = 4,
                            Quantidade = 100
                        },
                        new
                        {
                            Id = 5,
                            ClienteId = 2,
                            DataCompra = new DateTime(2024, 5, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3730),
                            Preco = 809.40m,
                            ProdutoId = 1,
                            Quantidade = 5
                        },
                        new
                        {
                            Id = 6,
                            ClienteId = 2,
                            DataCompra = new DateTime(2024, 6, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3731),
                            Preco = 270.00m,
                            ProdutoId = 5,
                            Quantidade = 300
                        });
                });

            modelBuilder.Entity("Case.Dominio.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoProduto")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataVencimento = new DateTime(2024, 9, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3696),
                            Disponivel = true,
                            Nome = "HGLG11",
                            TipoProduto = 1,
                            Valor = 161.88m
                        },
                        new
                        {
                            Id = 2,
                            DataVencimento = new DateTime(2024, 10, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3704),
                            Disponivel = true,
                            Nome = "MXRF11",
                            TipoProduto = 1,
                            Valor = 10.42m
                        },
                        new
                        {
                            Id = 3,
                            DataVencimento = new DateTime(2024, 12, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3705),
                            Disponivel = true,
                            Nome = "CVCB3",
                            TipoProduto = 0,
                            Valor = 2.30m
                        },
                        new
                        {
                            Id = 4,
                            DataVencimento = new DateTime(2024, 10, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3706),
                            Disponivel = true,
                            Nome = "PETZ3",
                            TipoProduto = 0,
                            Valor = 5.16m
                        },
                        new
                        {
                            Id = 5,
                            DataVencimento = new DateTime(2024, 10, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3708),
                            Disponivel = true,
                            Nome = "AMER3",
                            TipoProduto = 0,
                            Valor = 0.9m
                        });
                });

            modelBuilder.Entity("Case.Dominio.Entidades.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvestimentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvestimentoId");

                    b.ToTable("Transacoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2024, 8, 19, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3744),
                            InvestimentoId = 1,
                            Preco = 809.55m,
                            Quantidade = 5m,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2024, 8, 20, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3748),
                            InvestimentoId = 1,
                            Preco = 809.55m,
                            Quantidade = 5m,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 3,
                            Data = new DateTime(2024, 7, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3749),
                            InvestimentoId = 2,
                            Preco = 208.4m,
                            Quantidade = 20m,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 4,
                            Data = new DateTime(2024, 8, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3750),
                            InvestimentoId = 2,
                            Preco = 104.2m,
                            Quantidade = 10m,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 5,
                            Data = new DateTime(2024, 7, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3751),
                            InvestimentoId = 3,
                            Preco = 230m,
                            Quantidade = 100m,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 6,
                            Data = new DateTime(2024, 8, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3754),
                            InvestimentoId = 3,
                            Preco = 115m,
                            Quantidade = 50m,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 7,
                            Data = new DateTime(2024, 8, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3755),
                            InvestimentoId = 4,
                            Preco = 258m,
                            Quantidade = 50m,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 8,
                            Data = new DateTime(2024, 6, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3760),
                            InvestimentoId = 5,
                            Preco = 323.76m,
                            Quantidade = 2m,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 9,
                            Data = new DateTime(2024, 7, 21, 20, 45, 19, 216, DateTimeKind.Utc).AddTicks(3761),
                            InvestimentoId = 6,
                            Preco = 90m,
                            Quantidade = 100m,
                            Tipo = 0
                        });
                });

            modelBuilder.Entity("Case.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Papel")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CpfCnpj = "987654321",
                            Email = "admin@seed.com",
                            Nome = "Admin",
                            Papel = 0,
                            Senha = ""
                        },
                        new
                        {
                            Id = 2,
                            CpfCnpj = "987654321",
                            Email = "Operacao@seed.com",
                            Nome = "Operacao",
                            Papel = 1,
                            Senha = ""
                        },
                        new
                        {
                            Id = 3,
                            CpfCnpj = "458787878",
                            Email = "cliente@seed.com",
                            Nome = "Maria Doe",
                            Papel = 2,
                            Senha = ""
                        },
                        new
                        {
                            Id = 4,
                            CpfCnpj = "125879875",
                            Email = "cliente2@seed.com",
                            Nome = "John Doe",
                            Papel = 2,
                            Senha = ""
                        });
                });

            modelBuilder.Entity("Case.Dominio.Entidades.Cliente", b =>
                {
                    b.HasOne("Case.Dominio.Entidades.Usuario", "Usuario")
                        .WithOne()
                        .HasForeignKey("Case.Dominio.Entidades.Cliente", "UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Case.Dominio.Entidades.Investimento", b =>
                {
                    b.HasOne("Case.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Investimentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Case.Dominio.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Case.Dominio.Entidades.Transacao", b =>
                {
                    b.HasOne("Case.Dominio.Entidades.Investimento", "Investimento")
                        .WithMany()
                        .HasForeignKey("InvestimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investimento");
                });

            modelBuilder.Entity("Case.Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Investimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
